[{"categories":["画图"],"content":"出入口流量图 ","date":"2023-03-14","objectID":"/posts/golang/hugo%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8mermaid%E7%BB%98%E5%9B%BE/:1:0","tags":["画图"],"title":"Hugo如何使用mermaid绘图","uri":"/posts/golang/hugo%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8mermaid%E7%BB%98%E5%9B%BE/"},{"categories":["vpn"],"content":"什么是IPsec VPN? VPN（Virtual Private Network，虚拟专用网）是一种在公用网络上建立专用网络的技术。它之所以称之为虚拟网，主要是因为VPN的两个节点之间并没有像传统专用网那样使用端到端的物理链路，而是架构在公用网络如Internet之上的逻辑网络，用户数据通过逻辑链路传输。 按照VPN协议分，常见的VPN种类有：IPsec、SSL、GRE、PPTP和L2TP等。其中IPsec是通用性较强的一种VPN技术，适用于多种网络互访的场景。 IPsec VPN是指采用IPsec实现远程接入的一种VPN技术，通过在公网上为两个或多个私有网络之间建立IPsec隧道，并通过加密和验证算法保证VPN连接的安全。 IPsec VPN保护的是点对点之间的通信，通过IPsec VPN可以在主机和主机之间、主机和网络安全网关之间或网络安全网关（如路由器、防火墙）之间建立安全的隧道连接。其协议主要工作在IP层，在IP层对数据包进行加密和验证。 相对于其他VPN技术，IPsec VPN安全性更高，数据在IPsec隧道中都是加密传输，但相应的IPsec VPN在配置和组网部署上更复杂。 ","date":"2023-03-14","objectID":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/:1:0","tags":["vpn"],"title":"什么是IPsec","uri":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/"},{"categories":["vpn"],"content":"IPsec是如何工作的？ IPsec的工作原理大致可以分为4个阶段： 识别“感兴趣流”。网络设备接收到报文后，通常会将报文的五元组等信息和IPsec策略进行匹配来判断报文是否要通过IPsec隧道传输，需要通过IPsec隧道传输的流量通常被称为“感兴趣流”。 协商安全联盟（Security Association，以下简称SA）。SA是通信双方对某些协商要素的约定，比如双方使用的安全协议、数据传输采用的封装模式、协议采用的加密和验证算法、用于数据传输的密钥等，通信双方之间只有建立了SA，才能进行安全的数据传输。 识别出感兴趣流后，本端网络设备会向对端网络设备发起SA协商。在这一阶段，通信双方之间通过IKE协议先协商建立IKE SA（用于身份验证和密钥信息交换），然后在IKE SA的基础上协商建立IPsec SA（用于数据安全传输）。 数据传输。IPsec SA建立成功后，双方就可以通过IPsec隧道传输数据了。 IPsec为了保证数据传输的安全性，在这一阶段需要通过AH或ESP协议对数据进行加密和验证。加密机制保证了数据的机密性，防止数据在传输过程中被窃取；验证机制保证了数据的真实可靠，防止数据在传输过程中被仿冒和篡改。 隧道拆除。通常情况下，通信双方之间的会话老化（连接断开）即代表通信双方数据交换已经完成，因此为了节省系统资源，通信双方之间的隧道在空闲时间达到一定值后会自动删除。 如图所示，IPsec发送方会使用加密算法和加密密钥对报文进行加密，即将原始数据“乔装打扮”封装起来。然后发送方和接收方分别通过相同的验证算法和验证密钥对加密后的报文进行处理得到完整性校验值ICV。如果两端计算的ICV相同则表示该报文在传输过程中没有被篡改，接收方对验证通过的报文进行解密处理；如果ICV不相同则直接丢弃报文。 ","date":"2023-03-14","objectID":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/:2:0","tags":["vpn"],"title":"什么是IPsec","uri":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/"},{"categories":["vpn"],"content":"IPsec的3个重要协议- IKE/AH/ESP IKE（Internet Key Exchange，因特网密钥交换） IKE协议是一种基于UDP的应用层协议，它主要用于SA协商和密钥管理。 IKE协议分IKEv1和IKEv2两个版本，IKEv2与IKEv1相比，修复了多处公认的密码学方面的安全漏洞，提高了安全性能，同时简化了安全联盟的协商过程，提高了协商效率。 IKE协议属于一种混合型协议，它综合了ISAKMP（Internet Security Association and Key Management Protocol）、Oakley协议和SKEME协议这三个协议。其中，ISAKMP定义了IKE SA的建立过程，Oakley和SKEME协议的核心是DH（Diffie-Hellman）算法，主要用于在Internet上安全地分发密钥、验证身份，以保证数据传输的安全性。IKE SA和IPSec SA需要的加密密钥和验证密钥都是通过DH算法生成的，它还支持密钥动态刷新。 AH（Authentication Header，认证头） AH协议用来对IP报文进行数据源认证和完整性校验，即用来保证传输的IP报文的来源可信和数据不被篡改，但它并不提供加密功能。AH协议在每个数据包的标准IP报文头后面添加一个AH报文头，AH协议对报文的完整性校验的范围是整个IP报文。 ESP（Encapsulating Security Payload，封装安全载荷） ESP协议除了对IP报文进行数据源认证和完整性校验以外，还能对数据进行加密。ESP协议在每一个数据包的标准IP报头后方添加一个ESP报文头，并在数据包后方追加一个ESP尾（ESP Trailer和ESP Auth data）。ESP协议在传输模式下的数据完整性校验范围不包括IP头，因此它不能保证IP报文头不被篡改。 AH和ESP可以单独使用，也可以同时使用。AH和ESP同时使用时，报文会先进行ESP封装，再进行AH封装；IPsec解封装时，先进行AH解封装，再进行ESP解封装。 ","date":"2023-03-14","objectID":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/:3:0","tags":["vpn"],"title":"什么是IPsec","uri":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/"},{"categories":["vpn"],"content":"IPsec使用的端口 IPsec中IKE协议采用UDP 500端口发起和响应协商，因此为了使IKE协商报文顺利通过网关设备，通常要在网关设备上配置安全策略放开UDP 500端口。另外，在IPsec NAT穿越场景下，还需要放开UDP 4500端口。 而AH和ESP属于网络层协议，不涉及端口。为了使IPsec隧道能正常建立，通常还要在网关设备上配置安全策略放开AH（IP协议号是51）和ESP（IP协议号是50）服务。 ","date":"2023-03-14","objectID":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/:4:0","tags":["vpn"],"title":"什么是IPsec","uri":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/"},{"categories":["vpn"],"content":"IPsec VPN和SSL VPN对比 IPsec和SSL是部署VPN时最常用的两种技术，它们都有加密和验证机制保证用户远程接入的安全性。从以下几个方面对IPsec VPN和SSL VPN进行对比： ","date":"2023-03-14","objectID":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/:5:0","tags":["vpn"],"title":"什么是IPsec","uri":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/"},{"categories":["vpn"],"content":"OSI参考模型工作层级 OSI定义了网络互连的七层框架：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层。IPsec工作在网络层，它直接运行在IP（Internet Protocol，互联网协议）之上。而SSL工作在应用层，是一种应用层协议，它加密的是HTTP流量，而不是直接加密IP数据包。 ","date":"2023-03-14","objectID":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/:5:1","tags":["vpn"],"title":"什么是IPsec","uri":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/"},{"categories":["vpn"],"content":"配置部署 IPsec VPN通常适用于Site to Site（站点到站点）的组网，要求站点分别部署VPN网关或远程用户安装专用的VPN客户端，因此配置部署复杂度和维护成本都比较高。但SSL VPN通常适用于Client to Site（客户端到站点）的组网，只要求远程用户使用支持SSL的标准浏览器安装指定插件即可进行访问，通过数据中心部署VPN网关进行集中管理和维护，因此配置部署更简单，维护成本相对较低。 ","date":"2023-03-14","objectID":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/:5:2","tags":["vpn"],"title":"什么是IPsec","uri":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/"},{"categories":["vpn"],"content":"安全性 IPSec工作在网络层，对站点间传输的所有数据进行保护。IPSec VPN要求远程用户安装专用的VPN客户端或在站点部署VPN网关设备，用户访问会受到客户端或网关在用户认证规则、安全策略规则或内容安全过滤方面的检查，因此安全性更高。而SSL VPN不要求安装专用客户端或接入站点部署网关设备，更容易受到安全威胁的影响。 ","date":"2023-03-14","objectID":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/:5:3","tags":["vpn"],"title":"什么是IPsec","uri":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/"},{"categories":["vpn"],"content":"访问控制 IPsec工作在网络层，不能基于应用进行细粒度的访问控制。而SSL VPN在精细化访问控制上更灵活，网络管理员可以将网络资源根据不同的应用类型划分为不同的资源类型，每一类资源的访问权限不同。 ","date":"2023-03-14","objectID":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/:5:4","tags":["vpn"],"title":"什么是IPsec","uri":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/"},{"categories":["vpn"],"content":"参考 转载 ","date":"2023-03-14","objectID":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/:6:0","tags":["vpn"],"title":"什么是IPsec","uri":"/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/"},{"categories":["draft"],"content":"一站式 DevOps 平台 提供标准化、自动化、服务化、数据化的 DevOps 平台，实现从需求到部署高频、顺畅、高质量的价值交付 ","date":"2023-03-08","objectID":"/posts/devops/%E4%B8%80%E7%AB%99%E5%BC%8Fdevops%E5%B9%B3%E5%8F%B0/:1:0","tags":["draft"],"title":"一站式DevOps平台","uri":"/posts/devops/%E4%B8%80%E7%AB%99%E5%BC%8Fdevops%E5%B9%B3%E5%8F%B0/"},{"categories":["k8s"],"content":" $ helm list NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION my-emqx mid 1 2022-07-05 17:29:44.314166753 +0800 CST deployed emqx-5.0.2 5.0.2 zookeeper mid 1 2022-04-20 11:20:45.07677177 +0800 CST deployed zookeeper-5.1.1 3.5.6 $ helm uninstall my-emqx release \"my-emqx\" uninstalled $ helm uninstall zookeeper W0308 14:36:09.458819 141991 warnings.go:70] policy/v1beta1 PodDisruptionBudget is deprecated in v1.21+, unavailable in v1.25+; use policy/v1 PodDisruptionBudget release \"zookeeper\" uninstalled $ helm list NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION ## 列出所有命名空间 $ helm list -A NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION ack-node-local-dns kube-system 1 2021-11-14 11:20:03.795459724 +0800 CST deployed ack-node-local-dns-1.3.5 1.3.5 ack-node-problem-detector kube-system 2 2022-12-02 14:36:49.888033773 +0800 CST deployed ack-node-problem-detector-1.2.11 0.8.0 ack-onepilot ack-onepilot 1 2022-10-14 16:49:41.872857464 +0800 CST deployed ack-onepilot-3.0.4 3.0.4 arms-cmonitor arms-prom 1 2022-01-14 14:53:22.012099821 +0800 CST deployed ack-arms-cmonitor-1.0.0 1.0.0 arms-pilot arms-pilot 1 2022-10-14 16:44:25.433792356 +0800 CST deployed ack-arms-pilot-1.52.3 1.52.3 arms-prometheus arms-prom 2 2022-11-16 10:25:34.959976213 +0800 CST deployed ack-arms-prometheus-1.1.9 1.1.1 cert-manager cert-manager 1 2022-01-11 18:11:21.641753546 +0800 CST deployed cert-manager-v0.13.1 v0.13.1 kruise default 1 2021-12-02 10:06:09.494004253 +0000 UTC deployed kruise-0.10.1 my-release default 1 2022-03-02 11:22:48.551002175 +0800 CST deployed external-dns-6.1.0 0.10.2 tailscale-subnet-router default 2 2022-03-16 15:55:23.197996758 +0800 CST deployed tailscale-relay-0.1.1 v1.18.2 ","date":"2023-03-08","objectID":"/posts/k8s/helm%E5%8D%B8%E8%BD%BD%E5%B7%B2%E7%BB%8F%E5%AE%89%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8/:0:0","tags":["k8s"],"title":"Helm卸载已经安装的应用","uri":"/posts/k8s/helm%E5%8D%B8%E8%BD%BD%E5%B7%B2%E7%BB%8F%E5%AE%89%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8/"},{"categories":["golang"],"content":"简介 croc是一种允许任何两台计算机简单安全地传输文件和文件夹的工具。据我所知，croc是唯一可以执行以下所有操作的CLI 文件传输工具： 允许任何两台计算机传输数据（使用中继服务器） 提供端到端加密（使用 PAKE） 实现轻松的跨平台传输（Windows、Linux、Mac） 允许多个文件传输 允许恢复被中断的传输 不需要本地服务器或端口转发 ipv6-first和 ipv4 后备 可以使用代理，比如tor ","date":"2023-03-07","objectID":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/:1:0","tags":["golang"],"title":"文件传输工具croc","uri":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/"},{"categories":["golang"],"content":"安装 go install github.com/schollz/croc/v9@latest ","date":"2023-03-07","objectID":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/:2:0","tags":["golang"],"title":"文件传输工具croc","uri":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/"},{"categories":["golang"],"content":"使用 # send croc send --code code-phrase [file(s)-or-folder] # receive croc code-phrase send : 表示发送 –code：指定传输和接收的code(不小于6个字符)，用于建立密码验证密钥协议 ( PAKE[3] ），也可以不带此选项会自动生成code。 ","date":"2023-03-07","objectID":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/:3:0","tags":["golang"],"title":"文件传输工具croc","uri":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/"},{"categories":["golang"],"content":"croc 发送 $croc send --code 123456 zshrc Sending 'zshrc' (3.9 kB) Code is: 123456 On the other computer run croc 123456 Sending (-\u003e192.168.0.103:62532) 100% |████████████████████| (3.9/3.9 kB, 1.711 MB/s) ","date":"2023-03-07","objectID":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/:3:1","tags":["golang"],"title":"文件传输工具croc","uri":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/"},{"categories":["golang"],"content":"croc 接收 $ croc 123456 Accept 'zshrc' (3.9 kB)? (Y/n) y Receiving (\u003c-192.168.0.104:9009) 100% |████████████████████| (3.9/3.9 kB, 213.064 kB/s) ","date":"2023-03-07","objectID":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/:3:2","tags":["golang"],"title":"文件传输工具croc","uri":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/"},{"categories":["golang"],"content":"其他例子 使用管道传输 cat [filename] | croc send 传输文本 croc send --text \"hello world\" ","date":"2023-03-07","objectID":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/:3:3","tags":["golang"],"title":"文件传输工具croc","uri":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/"},{"categories":["golang"],"content":"使用自建中继服务器 默认情况下，croc使用公共中继器。如果你可以不想使用公共的中继服务器，，你可以搭建自己的中继服务器，端口你可以自定义，但必须至少有两个端口。第一个端口用于通信，后续端口用于多路数据传输。 docker run -d -p 9009-9013:9009-9013 -e CROC_PASS='croc_relay_1234' schollz/croc 发送文件 $croc --pass croc_relay_1234 --relay \"192.168.0.103:9009\" send test.md Sending 'test.md' (13 B) Code is: 0484-memo-capital-papa On the other computer run croc --relay 192.168.0.103:9009 --pass croc_relay_1234 0484-memo-capital-papa Sending (-\u003e192.168.0.103:49170) 100% |████████████████████| (13/13 B, 37.528 kB/s) 接收文件 $croc --relay 192.168.0.103:9009 --pass croc_relay_1234 0484-memo-capital-papa Accept 'test.md' (13 B)? (Y/n) y Receiving (\u003c-127.0.0.1:65528) 100% |████████████████████| (13/13 B, 9.311 kB/s) ","date":"2023-03-07","objectID":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/:4:0","tags":["golang"],"title":"文件传输工具croc","uri":"/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/"},{"categories":["代理"],"content":"介绍 GsouCloud快不快？GsouCloud是一家中高端 SSR、V2Ray 高性价比机场。虽然已经成立了一段时间，该机场一直比较低调，全站专线节点，专线不过墙，高强度加密可保护数据安全性，特点就是稳快 ，无视任何晚高峰、会议，依然4k流畅，油管长期速度保持再5万-20万之间； 写在前面：本文介绍主要是为了学习科研以及外贸工作。请遵守中华人民共和国法律法规，切勿在任何地方发布分裂，激化民族矛盾的言论。本博客不欢迎不爱国及极端人士。 BGP 隧道中转、IPLC 专线成本非常高，稳定性远比普通线路高很多，延迟低，线路质量也非常好，用户体验非常好。在特殊时期，IPLC 专线服务也几乎不受任何影响，GsouCloud绝对是对线路质量要求高的用户的最佳选择之一。在使用过程中，非常稳定，可以作为追剧加速的主力机场使用。 高速稳定 体验宛若身在海外的访问速度 便携设置 我们的服务适用于 macOS、iOS、Android、Windows 和 Linux 方便易用 拥有专用的一键客户端，简单易懂不管是新手还是小白，轻松使用 节省成本 相比自托管服务可节省大量费用 全球互联 通过 IXP 连接至全球内容提供商，更加快速 运营商友好 我们的产品和您的当地运营商兼容，适用于您的固网与移动网络 多应用兼容 提供全面且可靠的第三方应用程序兼容 ","date":"2023-03-04","objectID":"/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/:1:0","tags":["v2ray"],"title":"V2Ray机场:GsouCloud","uri":"/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/"},{"categories":["代理"],"content":"多平台完美支持 Gsou Cloud的服务适用于 macOS、iOS、Android、Windows 和 Linux，借助第三方客户端，可在手机、电脑、路由器、游戏机、电视盒子中使用。 解锁流媒体，观赏和聆听优质的内容 通过 Gsou Cloud 的服务，可以观看包括 Netflix、Hulu、HBO、TVB、Happyon、AbemaTV 等在内的多种流媒体视频，聆听包括 Spotify、Pandora 等在内的流媒体音乐。 不仅仅如此，亦包含以下诸多特性 部分特性需要配合第三方客户端与托管规则使用 过滤常用网站广告、常用视频广告、其他流媒体网站广告 智能分流系统，所有国内网站直线连接，增强用户体验 Apple服务加速 (App Store、Apple Music、iCloud、iTunes等) 国外常用网站加速 (Google/Youtube/Twitter/Instgram/Github等) 在传输过程中使用最强的加密方式，保护用户数据和隐私 与诸多平台上的优秀应用程序兼容，这些应用程序由许多创新公司和开发人员开发 ","date":"2023-03-04","objectID":"/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/:2:0","tags":["v2ray"],"title":"V2Ray机场:GsouCloud","uri":"/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/"},{"categories":["代理"],"content":"套餐 套餐 每月流量(GB) 月付(元) 季付(元) 半年(元) 年付(元) Simple 100 30 60 105 180 Lite 150 30 72 126 216 Pro 225 35 84 147 252 ","date":"2023-03-04","objectID":"/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/:3:0","tags":["v2ray"],"title":"V2Ray机场:GsouCloud","uri":"/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/"},{"categories":["代理"],"content":"测速结果 ","date":"2023-03-04","objectID":"/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/:4:0","tags":["v2ray"],"title":"V2Ray机场:GsouCloud","uri":"/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/"},{"categories":["代理"],"content":"链接 https://gsoust.xyz/auth/register?code=7C7n ","date":"2023-03-04","objectID":"/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/:5:0","tags":["v2ray"],"title":"V2Ray机场:GsouCloud","uri":"/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/"},{"categories":["python"],"content":"pipx介绍 pipx 是一个 Python 工具，用于管理全局 Python 包的命令行工具。它允许用户在独立的虚拟环境中安装和运行 Python 包，同时仍然可以在系统范围内访问这些包的命令行工具。通过使用 pipx，可以更轻松地管理 Python 工具和应用程序，同时避免破坏系统范围内的 Python 环境。 ","date":"2023-03-04","objectID":"/posts/pipx%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/:1:0","tags":["python"],"title":"Pipx包管理工具","uri":"/posts/pipx%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"},{"categories":["python"],"content":"pipx安装 要安装pipx，可以使用pip命令，具体步骤如下： 安装pip：如果您的系统上没有安装pip，请根据您的操作系统文档中的指示进行安装。 使用pip安装pipx：在终端窗口中输入以下命令，以在系统上安装pipx： pip install pipx ","date":"2023-03-04","objectID":"/posts/pipx%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/:2:0","tags":["python"],"title":"Pipx包管理工具","uri":"/posts/pipx%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"},{"categories":["python"],"content":"使用 现在您可以使用pipx来安装Python应用程序，例如： pipx install some-package 这将使用pipx安装some-package，并在系统上创建一个隔离的虚拟环境，以确保该包的依赖项不会与您的系统中的其他软件包冲突。 chunk@chunk-ThinkPad-X1-Carbon-5th  /tmp $ pipx list venvs are in /home/chunk/.local/pipx/venvs apps are exposed on your $PATH at /home/chunk/.local/bin package pip-search 0.0.12, installed using Python 3.10.6 - pip_search package thefuck 3.32, installed using Python 3.10.6 - fuck - thefuck package yt-dlp 2023.3.3, installed using Python 3.10.6 - yt-dlp ","date":"2023-03-04","objectID":"/posts/pipx%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/:3:0","tags":["python"],"title":"Pipx包管理工具","uri":"/posts/pipx%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"},{"categories":["python"],"content":"升级包 pipx upgrade cowsay # 升级pipx所有包 pipx upgrade-all ","date":"2023-03-04","objectID":"/posts/pipx%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/:3:1","tags":["python"],"title":"Pipx包管理工具","uri":"/posts/pipx%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"},{"categories":["ubuntu"],"content":"环境信息 .-/+oossssoo+/-. chunk@chunk-ThinkPad-X1-Carbon-5th `:+ssssssssssssssssss+:` ---------------------------------- -+ssssssssssssssssssyyssss+- OS: Ubuntu 22.04.2 LTS x86_64 .ossssssssssssssssssdMMMNysssso. Host: 20HRS15700 ThinkPad X1 Carbon 5th /ssssssssssshdmmNNmmyNMMMMhssssss/ Kernel: 5.19.0-32-generic +ssssssssshmydMMMMMMMNddddyssssssss+ Uptime: 9 days, 8 hours, 18 mins /sssssssshNMMMyhhyyyyhmNMMMNhssssssss/ Packages: 3600 (dpkg), 7 (flatpak), 27 (snap) .ssssssssdMMMNhsssssssssshNMMMdssssssss. Shell: zsh 5.8.1 +sssshhhyNMMNyssssssssssssyNMMMysssssss+ Resolution: 1920x1080 ossyNMMMNyMMhsssssssssssssshmmmhssssssso DE: GNOME ossyNMMMNyMMhsssssssssssssshmmmhssssssso WM: Mutter +sssshhhyNMMNyssssssssssssyNMMMysssssss+ WM Theme: Adwaita .ssssssssdMMMNhsssssssssshNMMMdssssssss. Theme: Yaru [GTK2/3] /sssssssshNMMMyhhyyyyhdNMMMNhssssssss/ Icons: Yaru [GTK2/3] +sssssssssdmydMMMMMMMMddddyssssssss+ Terminal: gnome-terminal /ssssssssssshdmNNNNmyNMMMMhssssss/ CPU: Intel i7-7500U (4) @ 3.500GHz .ossssssssssssssssssdMMMNysssso. GPU: Intel HD Graphics 620 -+sssssssssssssssssyyyssss+- Memory: 12136MiB / 15760MiB `:+ssssssssssssssssss+:` .-/+oossssoo+/-. ","date":"2023-03-01","objectID":"/posts/ubuntu%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nala/:1:0","tags":["ubuntu"],"title":"Ubuntu包管理工具nala","uri":"/posts/ubuntu%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nala/"},{"categories":["ubuntu"],"content":"添加需要安装软件的仓库 sudo add-apt-repository ppa:phoerious/keepassxc\\n sudo apt update\\n ","date":"2023-03-01","objectID":"/posts/ubuntu%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nala/:2:0","tags":["ubuntu"],"title":"Ubuntu包管理工具nala","uri":"/posts/ubuntu%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nala/"},{"categories":["ubuntu"],"content":"nala安装软件 试用了一下nala,安装软件速度真的有点快 chunk@chunk-ThinkPad-X1-Carbon-5th  ~/code/github/quickstart   master ±✚  sudo nala install keepassxc --no-autoremove =================================================================================================================================================================================================================== Auto-Removable, Will Not Be Removed =================================================================================================================================================================================================================== Package: Version: Size: fcitx-config-common 0.4.10-3 58 KB fcitx-config-gtk 0.4.10-3 138 KB fcitx-module-quickphrase-editor5 1.2.7-1.2build1 146 KB gstreamer1.0-plugins-base:i386 1.20.1-1 2.7 MB gyp 0.1+20210831gitd6c5dd5-5 1.2 MB krb5-config 2.6+nmu1ubuntu1 63 KB libapparmor1:i386 3.0.4-2ubuntu2.1 177 KB libasn1-8-heimdal:i386 7.7.0+dfsg-3ubuntu1 873 KB libasound2-plugins:i386 1.2.6-1 328 KB libasound2:i386 1.2.6.1-1ubuntu1 1.3 MB libasyncns0:i386 0.8-6build2 44 KB libatk-bridge2.0-0:i386 2.38.0-3 265 KB libatk1.0-0:i386 2.36.0-3build1 203 KB libatomic1:i386 12.1.0-2ubuntu1~22.04 41 KB libatspi2.0-0:i386 2.44.0-3 272 KB libavahi-client3:i386 0.8-5ubuntu5 147 KB libavahi-common-data:i386 0.8-5ubuntu5 119 KB libavahi-common3:i386 0.8-5ubuntu5 120 KB libbrotli1:i386 1.0.9-2build6 812 KB libbsd0:i386 0.11.5-1 142 KB libcairo-gobject2:i386 1.16.0-5ubuntu2 96 KB libcairo2:i386 1.16.0-5ubuntu2 1.6 MB libcapi20-3:i386 1:3.27-3 108 KB libcdparanoia0:i386 3.10.2+debian-14build2 147 KB libcolord2:i386 1.4.6-1 694 KB libcups2:i386 2.4.1op1-1ubuntu4.1 858 KB libdatrie1:i386 0.2.13-2 68 KB libdecor-0-0:i386 0.1.0-3build1 53 KB libdecor-0-plugin-1-cairo:i386 0.1.0-3build1 66 KB libdeflate0:i386 1.10-2 144 KB libdrm-amdgpu1:i386 2.4.113-2~ubuntu0.22.04.1 89 KB libdrm2:i386 2.4.113-2~ubuntu0.22.04.1 142 KB libdw1:i386 0.186-1build1 777 KB libedit2:i386 3.1-20210910-1build1 269 KB libelf1:i386 0.186-1build1 197 KB libepoxy0:i386 1.5.10-1 1.3 MB libexif12:i386 0.6.24-1build1 352 KB libexpat1:i386 2.4.7-1ubuntu0.2 433 KB libfcitx-config4 1:4.2.9.8-5 136 KB libfcitx-core0 1:4.2.9.8-5 180 KB libfcitx-gclient1 1:4.2.9.8-5 95 KB libfcitx-qt5-1 1.2.7-1.2build1 307 KB libfcitx-qt5-data 1.2.7-1.2build1 61 KB libfcitx-utils0 1:4.2.9.8-5 125 KB libffi8:i386 3.4.2-4 66 KB libflac8:i386 1.3.3-2ubuntu0.1 288 KB libflashrom1 1.2-5build1 890 KB libfontconfig1:i386 2.13.1-4.2ubuntu5 361 KB libfreetype6:i386 2.11.1+dfsg-1ubuntu0.1 910 KB libfribidi0:i386 1.0.8-2ubuntu3.1 138 KB libftdi1-2 1.5-5build3 83 KB libgbm1:i386 22.2.5-0ubuntu0.1~22.04.1 151 KB libgd3:i386 2.3.0-2ubuntu2 468 KB libgdbm-compat4:i386 1.23-1 50 KB libgdbm6:i386 1.23-1 114 KB libgdk-pixbuf-2.0-0:i386 2.42.8+dfsg-1ubuntu0.2 531 KB libgdk-pixbuf-xlib-2.0-0:i386 2.40.2-2build4 105 KB libgdk-pixbuf2.0-0:i386 2.40.2-2build4 23 KB libgettextpo0 0.21-4ubuntu4 413 KB libglapi-mesa:i386 22.2.5-0ubuntu0.1~22.04.1 243 KB libglib2.0-0:i386 2.72.4-0ubuntu1 4.8 MB libglu1-mesa:i386 9.0.2-1 534 KB libglvnd0:i386 1.4.0-1 516 KB libgnutls30:i386 3.7.3-4ubuntu1.1 2.6 MB libgphoto2-port12:i386 2.5.27-1build2 319 KB libgraphite2-3:i386 1.3.14-1build2 199 KB libgsm1:i386 1.0.19-1 94 KB libgssapi3-heimdal:i386 7.7.0+dfsg-3ubuntu1 354 KB libgssrpc4 1.19.2-2ubuntu0.1 237 KB libgstreamer-plugins-base1.0-0:i386 1.20.1-1 3.0 MB libgstreamer1.0-0:i386 1.20.3-0ubuntu1 3.5 MB libgtk-3-0:i386 3.24.33-1ubuntu2 11.8 MB libharfbuzz0b:i386 2.7.4-1ubuntu3.1 1.1 MB libhcrypto4-heimdal:i386 7.7.0+dfsg-3ubuntu1 313 KB libheimbase1-heimdal:i386 7.7.0+dfsg-3ubuntu1 119 KB libheimntlm0-heimdal:i386 7.7.0+dfsg-3ubuntu1 87 KB libhogweed6:i386 3.7.3-1build2 349 KB libhx509-5-heimdal:i386 7.7.0+dfsg-3ubuntu1 388 KB libicu70:i386 70.1-2 35.5 MB libieee1284-3:i386 0.2.11-14build2 80 KB libjack0:i386 1:0.125.0-3build2 371 KB libjbig0:i386 2.1-3.1ubuntu0.22.04.1 79 KB libjpeg-turbo8:i386 2.1.2-0ubuntu1 621 KB libjpeg8:i386 8c-2ubuntu10 9 K","date":"2023-03-01","objectID":"/posts/ubuntu%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nala/:3:0","tags":["ubuntu"],"title":"Ubuntu包管理工具nala","uri":"/posts/ubuntu%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nala/"},{"categories":["golang"],"content":"123","date":"2023-03-01","objectID":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/","tags":["golang"],"title":"Golang构建基于tag(Gopher Guides NO.1构建标签)","uri":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/"},{"categories":["golang"],"content":" Build Tag Syntax Build Tag Sample Boolean Statement Space-separated elements // +build pro enterprise pro OR enterprise Comma-separated elements // +build pro,enterprise pro AND enterprise Exclamation point elements // +build !pro NOT pro 下面简单说说如何构建免费版、专业版和企业版的不同功能集的程序 ","date":"2023-03-01","objectID":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/:0:0","tags":["golang"],"title":"Golang构建基于tag(Gopher Guides NO.1构建标签)","uri":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/"},{"categories":["golang"],"content":"Space-separated elements 文件名：main.go package main import \"fmt\" var features = []string{ \"Free Feature #1\", \"Free Feature #2\", } func main() { for _, f := range features { fmt.Println(\"\u003e\", f) } } pro.go //go:build pro // +build pro package main func init() { features = append(features, \"Pro Feature #1\", \"Pro Feature #2\", ) } enterprise.go //go:build pro || enterprise // +build pro enterprise package main func init() { features = append(features, \"Enterprise Feature #1\", \"Enterprise Feature #2\", ) } 输出： ## \"pro enterprise\" tag都构建 chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ go build -tags \"pro enterprise\" chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ ./a \u003e Free Feature #1 \u003e Free Feature #2 \u003e Enterprise Feature #1 \u003e Enterprise Feature #2 \u003e Pro Feature #1 \u003e Pro Feature #2 ## 只构建enterprise的tag（注意这个） chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ go build -tags enterprise chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ ./a \u003e Free Feature #1 \u003e Free Feature #2 \u003e Enterprise Feature #1 \u003e Enterprise Feature #2 ## 构建带有tag的pro chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ go build -tags pro chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ ./a \u003e Free Feature #1 \u003e Free Feature #2 \u003e Enterprise Feature #1 \u003e Enterprise Feature #2 \u003e Pro Feature #1 \u003e Pro Feature #2 ","date":"2023-03-01","objectID":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/:1:0","tags":["golang"],"title":"Golang构建基于tag(Gopher Guides NO.1构建标签)","uri":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/"},{"categories":["golang"],"content":"Comma-separated elements 更改enterprise.go //go:build pro \u0026\u0026 enterprise // +build pro,enterprise package main func init() { features = append(features, \"Enterprise Feature #1\", \"Enterprise Feature #2\", ) } 输出： chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ go build -tags \"pro enterprise\" chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ ./a \u003e Free Feature #1 \u003e Free Feature #2 \u003e Enterprise Feature #1 \u003e Enterprise Feature #2 \u003e Pro Feature #1 \u003e Pro Feature #2 chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ go build -tags enterprise chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ ./a \u003e Free Feature #1 \u003e Free Feature #2 ## 注意这个pro tag,这个pro tag没有动过 chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ go build -tags pro chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ ./a \u003e Free Feature #1 \u003e Free Feature #2 \u003e Pro Feature #1 \u003e Pro Feature #2 ","date":"2023-03-01","objectID":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/:2:0","tags":["golang"],"title":"Golang构建基于tag(Gopher Guides NO.1构建标签)","uri":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/"},{"categories":["golang"],"content":"Exclamation point elements 这次更改pro.go //go:build !pro // +build !pro package main func init() { features = append(features, \"Pro Feature #1\", \"Pro Feature #2\", ) } 输出： chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ go build -tags \"pro enterprise\" chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ ./a \u003e Free Feature #1 \u003e Free Feature #2 \u003e Enterprise Feature #1 \u003e Enterprise Feature #2 ## 构建的时候不带有pro tag,就可以输出pro代码的相关信息 chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ go build -tags enterprise chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ ./a \u003e Free Feature #1 \u003e Free Feature #2 \u003e Pro Feature #1 \u003e Pro Feature #2 chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ go build -tags pro chunk@chunk-ThinkPad-X1-Carbon-5th:/tmp/go$ ./a \u003e Free Feature #1 \u003e Free Feature #2 ","date":"2023-03-01","objectID":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/:3:0","tags":["golang"],"title":"Golang构建基于tag(Gopher Guides NO.1构建标签)","uri":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/"},{"categories":["golang"],"content":"参考： customizing-go-binaries-with-build-tags ","date":"2023-03-01","objectID":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/:4:0","tags":["golang"],"title":"Golang构建基于tag(Gopher Guides NO.1构建标签)","uri":"/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/"},{"categories":null,"content":"需求 默认ack给我们每个work节点分配的容器组最大额度64,如图： 本想着尝试更改这个容器组数量 ","date":"2023-02-22","objectID":"/posts/%E9%98%BF%E9%87%8C%E4%BA%91ack%E5%AE%B9%E5%99%A8pod%E6%80%BB%E9%A2%9D%E5%BA%A6%E4%BF%AE%E6%94%B9/:1:0","tags":null,"title":"阿里云ack容器pod总额度修改","uri":"/posts/%E9%98%BF%E9%87%8C%E4%BA%91ack%E5%AE%B9%E5%99%A8pod%E6%80%BB%E9%A2%9D%E5%BA%A6%E4%BF%AE%E6%94%B9/"},{"categories":null,"content":"如何修改 通过root用户登陆ack工作节点，可以通过修改节点的/etc/systemd/system/kubelet.service.d/10-kubeadm.conf中的max pod来调整。 但请注意，创建集群的时候已经定义了每个节点支持的Pod数量（64个），这个时候也一并定义了节点的PodCIDR的子网掩码大小，这部分是无法调整的。 因此，虽然可以调整节点支持调度的pod数量，但每个节点可以给pod分配的IP是有限制的，无法修改。 意思就是说：注意可以分配的IP是固定修改不了的，但是可以修改每个节点所支持的容器组数量，所以一般不建议修改max pod数量。 # 阿里云ack 10-kubeadm.conf [Service] EnvironmentFile=-/etc/kubernetes/kubelet-customized-args.conf Environment=\"KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf\" Environment=\"KUBELET_SYSTEM_PODS_ARGS=--max-pods 64 --pod-manifest-path=/etc/kubernetes/manifests\" Environment=\"KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin --v=3\" Environment=\"KUBELET_DNS_ARGS=--enable-controller-attach-detach=true --cluster-dns=192.168.0.10 --pod-infra-container-image=registry-vpc.cn-shenzhen.aliyuncs.com/acs/pause:3.2 --enable-load-reader --cluster-domain=cluster.local --cloud-provider=external --hostname-override=cn-shenzhen.172.19.201.112 --provider-id=cn-shenzhen.i-wz91n56f8y4lx2jyf5yo\" Environment=\"KUBELET_AUTHZ_ARGS=--authorization-mode=Webhook --authentication-token-webhook=true --anonymous-auth=false --client-ca-file=/etc/kubernetes/pki/ca.crt\" Environment=\"KUBELET_CGROUP_ARGS=--cgroup-driver=systemd\" Environment=\"KUBELET_CERTIFICATE_ARGS=--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-cert-file=/var/lib/kubelet/pki/kubelet.crt --tls-private-key-file=/var/lib/kubelet/pki/kubelet.key --rotate-certificates=true --cert-dir=/var/lib/kubelet/pki\" ExecStart= ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_SYSTEM_PODS_ARGS $KUBELET_NETWORK_ARGS $KUBELET_DNS_ARGS $KUBELET_AUTHZ_ARGS $KUBELET_CGROUP_ARGS $KUBELET_CERTIFICATE_ARGS $KUBELET_EXTRA_ARGS $KUBELET_CUSTOMIZED_ARGS # 原生K8S 10-kubeadm.conf # Note: This dropin only works with kubeadm and kubelet v1.11+ [Service] Environment=\"KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf\" Environment=\"KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml\" # This is a file that \"kubeadm init\" and \"kubeadm join\" generate at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file. EnvironmentFile=-/etc/default/kubelet Environment=\"KUBELET_EXTRA_ARGS=--node-ip=192.168.5.12 --hostname-override=node1 \" ExecStart= ExecStart=/usr/local/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS KUBELET_SYSTEM_PODS_ARGS=–max-pods 64 –pod-manifest-path=/etc/kubernetes/manifests 这行已经定义了，最大的pod数量 ","date":"2023-02-22","objectID":"/posts/%E9%98%BF%E9%87%8C%E4%BA%91ack%E5%AE%B9%E5%99%A8pod%E6%80%BB%E9%A2%9D%E5%BA%A6%E4%BF%AE%E6%94%B9/:2:0","tags":null,"title":"阿里云ack容器pod总额度修改","uri":"/posts/%E9%98%BF%E9%87%8C%E4%BA%91ack%E5%AE%B9%E5%99%A8pod%E6%80%BB%E9%A2%9D%E5%BA%A6%E4%BF%AE%E6%94%B9/"},{"categories":null,"content":"建议 不推荐更改容器组的数量，建议直接水平扩容计算工作节点！ ","date":"2023-02-22","objectID":"/posts/%E9%98%BF%E9%87%8C%E4%BA%91ack%E5%AE%B9%E5%99%A8pod%E6%80%BB%E9%A2%9D%E5%BA%A6%E4%BF%AE%E6%94%B9/:3:0","tags":null,"title":"阿里云ack容器pod总额度修改","uri":"/posts/%E9%98%BF%E9%87%8C%E4%BA%91ack%E5%AE%B9%E5%99%A8pod%E6%80%BB%E9%A2%9D%E5%BA%A6%E4%BF%AE%E6%94%B9/"},{"categories":null,"content":"指标 Apdex-应用性能用户满意度指标。Apdex指数 ＝（1 × 满意样本 ＋ 0.5 × 容忍样本）÷ 样本总数 这样，采样结果被量化为一个0到1之间的数值即“Apdex指数”，0代表没有满意用户，1则代表所有用户都满意。 graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ","date":"2023-02-22","objectID":"/posts/pinpoint%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87%E4%BB%8B%E7%BB%8D/:1:0","tags":null,"title":"Pinpoint性能指标介绍","uri":"/posts/pinpoint%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87%E4%BB%8B%E7%BB%8D/"},{"categories":null,"content":"第一款是星巴克的深度佛罗娜，喝了有焦味。 我的第二款咖啡豆牌子 牌子 TO. 耶加雪菲，浅度烘培，处理方法：日晒 国际咖啡评鉴师总评分 85.75 TO精品咖啡豆 埃塞俄比亚切尔巴耶加雪菲日晒200g 原产地手冲单品 口感不错，有香气。 ","date":"2023-02-19","objectID":"/posts/my-second/:0:0","tags":null,"title":"咖啡","uri":"/posts/my-second/"},{"categories":null,"content":"大家好，我是一个devops运维工程师！也是一位SRE工程师！ ","date":"2023-02-19","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Introduction This is bold text, and this is emphasized text. Visit the Hugo website! ","date":"2023-02-18","objectID":"/posts/my-first-post/:1:0","tags":null,"title":"My First Post","uri":"/posts/my-first-post/"}]