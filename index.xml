<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>熊仔家族</title>
    <link>http://qq516249940.github.io/</link>
    <description>A Clean, Elegant but Advanced Hugo Theme for Hugo.</description>
    <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 14 Mar 2023 14:53:01 &#43;0800</lastBuildDate>
      <atom:link href="http://qq516249940.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
  <title>Hugo如何使用mermaid绘图</title>
  <link>http://qq516249940.github.io/posts/golang/hugo%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8mermaid%E7%BB%98%E5%9B%BE/</link>
  <pubDate>Tue, 14 Mar 2023 14:53:01 &#43;0800</pubDate>
  <author>Author</author>
  <guid>http://qq516249940.github.io/posts/golang/hugo%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8mermaid%E7%BB%98%E5%9B%BE/</guid>
  <description><![CDATA[ 出入口流量图 ]]></description>
</item>
<item>
  <title>什么是IPsec</title>
  <link>http://qq516249940.github.io/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/</link>
  <pubDate>Tue, 14 Mar 2023 14:50:08 &#43;0800</pubDate>
  <author>Author</author>
  <guid>http://qq516249940.github.io/posts/vpn/%E4%BB%80%E4%B9%88%E6%98%AFipsec/</guid>
  <description><![CDATA[什么是IPsec VPN? VPN（Virtual Private Network，虚拟专用网）是一种在公用网络上建立专用网络的技术。它之所以称之为虚拟网，主要是因为VPN的两个节点之间并没有像传统专用网那样使用端到端的物理链路，而是架构在公用网络如Internet之上的逻辑网络，用户数据通过逻辑链路传输。
按照VPN协议分，常见的VPN种类有：IPsec、SSL、GRE、PPTP和L2TP等。其中IPsec是通用性较强的一种VPN技术，适用于多种网络互访的场景。
IPsec VPN是指采用IPsec实现远程接入的一种VPN技术，通过在公网上为两个或多个私有网络之间建立IPsec隧道，并通过加密和验证算法保证VPN连接的安全。
IPsec VPN保护的是点对点之间的通信，通过IPsec VPN可以在主机和主机之间、主机和网络安全网关之间或网络安全网关（如路由器、防火墙）之间建立安全的隧道连接。其协议主要工作在IP层，在IP层对数据包进行加密和验证。
相对于其他VPN技术，IPsec VPN安全性更高，数据在IPsec隧道中都是加密传输，但相应的IPsec VPN在配置和组网部署上更复杂。
IPsec是如何工作的？ IPsec的工作原理大致可以分为4个阶段： 识别“感兴趣流”。网络设备接收到报文后，通常会将报文的五元组等信息和IPsec策略进行匹配来判断报文是否要通过IPsec隧道传输，需要通过IPsec隧道传输的流量通常被称为“感兴趣流”。 协商安全联盟（Security Association，以下简称SA）。SA是通信双方对某些协商要素的约定，比如双方使用的安全协议、数据传输采用的封装模式、协议采用的加密和验证算法、用于数据传输的密钥等，通信双方之间只有建立了SA，才能进行安全的数据传输。 识别出感兴趣流后，本端网络设备会向对端网络设备发起SA协商。在这一阶段，通信双方之间通过IKE协议先协商建立IKE SA（用于身份验证和密钥信息交换），然后在IKE SA的基础上协商建立IPsec SA（用于数据安全传输）。
数据传输。IPsec SA建立成功后，双方就可以通过IPsec隧道传输数据了。 IPsec为了保证数据传输的安全性，在这一阶段需要通过AH或ESP协议对数据进行加密和验证。加密机制保证了数据的机密性，防止数据在传输过程中被窃取；验证机制保证了数据的真实可靠，防止数据在传输过程中被仿冒和篡改。
隧道拆除。通常情况下，通信双方之间的会话老化（连接断开）即代表通信双方数据交换已经完成，因此为了节省系统资源，通信双方之间的隧道在空闲时间达到一定值后会自动删除。
如图所示，IPsec发送方会使用加密算法和加密密钥对报文进行加密，即将原始数据“乔装打扮”封装起来。然后发送方和接收方分别通过相同的验证算法和验证密钥对加密后的报文进行处理得到完整性校验值ICV。如果两端计算的ICV相同则表示该报文在传输过程中没有被篡改，接收方对验证通过的报文进行解密处理；如果ICV不相同则直接丢弃报文。 IPsec的3个重要协议- IKE/AH/ESP IKE（Internet Key Exchange，因特网密钥交换） IKE协议是一种基于UDP的应用层协议，它主要用于SA协商和密钥管理。
IKE协议分IKEv1和IKEv2两个版本，IKEv2与IKEv1相比，修复了多处公认的密码学方面的安全漏洞，提高了安全性能，同时简化了安全联盟的协商过程，提高了协商效率。
IKE协议属于一种混合型协议，它综合了ISAKMP（Internet Security Association and Key Management Protocol）、Oakley协议和SKEME协议这三个协议。其中，ISAKMP定义了IKE SA的建立过程，Oakley和SKEME协议的核心是DH（Diffie-Hellman）算法，主要用于在Internet上安全地分发密钥、验证身份，以保证数据传输的安全性。IKE SA和IPSec SA需要的加密密钥和验证密钥都是通过DH算法生成的，它还支持密钥动态刷新。
AH（Authentication Header，认证头） AH协议用来对IP报文进行数据源认证和完整性校验，即用来保证传输的IP报文的来源可信和数据不被篡改，但它并不提供加密功能。AH协议在每个数据包的标准IP报文头后面添加一个AH报文头，AH协议对报文的完整性校验的范围是整个IP报文。
ESP（Encapsulating Security Payload，封装安全载荷） ESP协议除了对IP报文进行数据源认证和完整性校验以外，还能对数据进行加密。ESP协议在每一个数据包的标准IP报头后方添加一个ESP报文头，并在数据包后方追加一个ESP尾（ESP Trailer和ESP Auth data）。ESP协议在传输模式下的数据完整性校验范围不包括IP头，因此它不能保证IP报文头不被篡改。
AH和ESP可以单独使用，也可以同时使用。AH和ESP同时使用时，报文会先进行ESP封装，再进行AH封装；IPsec解封装时，先进行AH解封装，再进行ESP解封装。
IPsec使用的端口 IPsec中IKE协议采用UDP 500端口发起和响应协商，因此为了使IKE协商报文顺利通过网关设备，通常要在网关设备上配置安全策略放开UDP 500端口。另外，在IPsec NAT穿越场景下，还需要放开UDP 4500端口。
而AH和ESP属于网络层协议，不涉及端口。为了使IPsec隧道能正常建立，通常还要在网关设备上配置安全策略放开AH（IP协议号是51）和ESP（IP协议号是50）服务。
IPsec VPN和SSL VPN对比 IPsec和SSL是部署VPN时最常用的两种技术，它们都有加密和验证机制保证用户远程接入的安全性。从以下几个方面对IPsec VPN和SSL VPN进行对比：
OSI参考模型工作层级 OSI定义了网络互连的七层框架：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层。IPsec工作在网络层，它直接运行在IP（Internet Protocol，互联网协议）之上。而SSL工作在应用层，是一种应用层协议，它加密的是HTTP流量，而不是直接加密IP数据包。]]></description>
</item>
<item>
  <title>一站式DevOps平台</title>
  <link>http://qq516249940.github.io/posts/devops/%E4%B8%80%E7%AB%99%E5%BC%8Fdevops%E5%B9%B3%E5%8F%B0/</link>
  <pubDate>Wed, 08 Mar 2023 16:07:34 &#43;0800</pubDate>
  <author>Author</author>
  <guid>http://qq516249940.github.io/posts/devops/%E4%B8%80%E7%AB%99%E5%BC%8Fdevops%E5%B9%B3%E5%8F%B0/</guid>
  <description><![CDATA[一站式 DevOps 平台 提供标准化、自动化、服务化、数据化的 DevOps 平台，实现从需求到部署高频、顺畅、高质量的价值交付 ]]></description>
</item>
<item>
  <title>Helm卸载已经安装的应用</title>
  <link>http://qq516249940.github.io/posts/k8s/helm%E5%8D%B8%E8%BD%BD%E5%B7%B2%E7%BB%8F%E5%AE%89%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8/</link>
  <pubDate>Wed, 08 Mar 2023 14:37:18 &#43;0800</pubDate>
  <author>Author</author>
  <guid>http://qq516249940.github.io/posts/k8s/helm%E5%8D%B8%E8%BD%BD%E5%B7%B2%E7%BB%8F%E5%AE%89%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
  <description><![CDATA[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 $ helm list NAME NAMESPACE	REVISION	UPDATED STATUS CHART APP VERSION my-emqx mid 1 2022-07-05 17:29:44.314166753 +0800 CST	deployed	emqx-5.0.2 5.0.2 zookeeper	mid 1 2022-04-20 11:20:45.07677177 +0800 CST deployed	zookeeper-5.1.1	3.5.6 $ helm uninstall my-emqx release &#34;my-emqx&#34; uninstalled $ helm uninstall zookeeper W0308 14:36:09.]]></description>
</item>
<item>
  <title>文件传输工具croc</title>
  <link>http://qq516249940.github.io/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/</link>
  <pubDate>Tue, 07 Mar 2023 15:25:49 &#43;0800</pubDate>
  <author>Author</author>
  <guid>http://qq516249940.github.io/posts/golang/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7croc/</guid>
  <description><![CDATA[简介 croc是一种允许任何两台计算机简单安全地传输文件和文件夹的工具。据我所知，croc是唯一可以执行以下所有操作的CLI 文件传输工具：
允许任何两台计算机传输数据（使用中继服务器） 提供端到端加密（使用 PAKE） 实现轻松的跨平台传输（Windows、Linux、Mac） 允许多个文件传输 允许恢复被中断的传输 不需要本地服务器或端口转发 ipv6-first和 ipv4 后备 可以使用代理，比如tor
安装 1 go install github.com/schollz/croc/v9@latest 使用 1 2 3 4 # send croc send --code code-phrase [file(s)-or-folder] # receive croc code-phrase send : 表示发送
&ndash;code：指定传输和接收的code(不小于6个字符)，用于建立密码验证密钥协议 ( PAKE[3] ），也可以不带此选项会自动生成code。
croc 发送 1 2 3 4 5 6 7 8 9 $croc send --code 123456 zshrc Sending &#39;zshrc&#39; (3.9 kB) Code is: 123456 On the other computer run croc 123456 Sending (-&gt;192.]]></description>
</item>
<item>
  <title>V2Ray机场:GsouCloud</title>
  <link>http://qq516249940.github.io/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/</link>
  <pubDate>Sat, 04 Mar 2023 23:02:30 &#43;0800</pubDate>
  <author>Author</author>
  <guid>http://qq516249940.github.io/posts/%E4%BC%98%E8%B4%A8ss/ssr/v2ray%E6%9C%BA%E5%9C%BAgsoucloud/</guid>
  <description><![CDATA[介绍 GsouCloud快不快？GsouCloud是一家中高端 SSR、V2Ray 高性价比机场。虽然已经成立了一段时间，该机场一直比较低调，全站专线节点，专线不过墙，高强度加密可保护数据安全性，特点就是稳快 ，无视任何晚高峰、会议，依然4k流畅，油管长期速度保持再5万-20万之间；
写在前面：本文介绍主要是为了学习科研以及外贸工作。请遵守中华人民共和国法律法规，切勿在任何地方发布分裂，激化民族矛盾的言论。本博客不欢迎不爱国及极端人士。
BGP 隧道中转、IPLC 专线成本非常高，稳定性远比普通线路高很多，延迟低，线路质量也非常好，用户体验非常好。在特殊时期，IPLC 专线服务也几乎不受任何影响，GsouCloud绝对是对线路质量要求高的用户的最佳选择之一。在使用过程中，非常稳定，可以作为追剧加速的主力机场使用。
高速稳定 体验宛若身在海外的访问速度 便携设置 我们的服务适用于 macOS、iOS、Android、Windows 和 Linux 方便易用 拥有专用的一键客户端，简单易懂不管是新手还是小白，轻松使用 节省成本 相比自托管服务可节省大量费用 全球互联 通过 IXP 连接至全球内容提供商，更加快速 运营商友好 我们的产品和您的当地运营商兼容，适用于您的固网与移动网络 多应用兼容 提供全面且可靠的第三方应用程序兼容
多平台完美支持 Gsou Cloud的服务适用于 macOS、iOS、Android、Windows 和 Linux，借助第三方客户端，可在手机、电脑、路由器、游戏机、电视盒子中使用。
解锁流媒体，观赏和聆听优质的内容 通过 Gsou Cloud 的服务，可以观看包括 Netflix、Hulu、HBO、TVB、Happyon、AbemaTV 等在内的多种流媒体视频，聆听包括 Spotify、Pandora 等在内的流媒体音乐。
不仅仅如此，亦包含以下诸多特性 部分特性需要配合第三方客户端与托管规则使用 过滤常用网站广告、常用视频广告、其他流媒体网站广告 智能分流系统，所有国内网站直线连接，增强用户体验 Apple服务加速 (App Store、Apple Music、iCloud、iTunes等) 国外常用网站加速 (Google/Youtube/Twitter/Instgram/Github等) 在传输过程中使用最强的加密方式，保护用户数据和隐私 与诸多平台上的优秀应用程序兼容，这些应用程序由许多创新公司和开发人员开发
套餐 套餐 每月流量(GB) 月付(元) 季付(元) 半年(元) 年付(元) Simple 100 30 60 105 180 Lite 150 30 72 126 216 Pro 225 35 84 147 252 测速结果 链接 https://gsoust.]]></description>
</item>
<item>
  <title>Pipx包管理工具</title>
  <link>http://qq516249940.github.io/posts/pipx%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link>
  <pubDate>Sat, 04 Mar 2023 22:44:03 &#43;0800</pubDate>
  <author>Author</author>
  <guid>http://qq516249940.github.io/posts/pipx%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid>
  <description><![CDATA[pipx介绍 pipx 是一个 Python 工具，用于管理全局 Python 包的命令行工具。它允许用户在独立的虚拟环境中安装和运行 Python 包，同时仍然可以在系统范围内访问这些包的命令行工具。通过使用 pipx，可以更轻松地管理 Python 工具和应用程序，同时避免破坏系统范围内的 Python 环境。
pipx安装 要安装pipx，可以使用pip命令，具体步骤如下：
安装pip：如果您的系统上没有安装pip，请根据您的操作系统文档中的指示进行安装。 使用pip安装pipx：在终端窗口中输入以下命令，以在系统上安装pipx：
1 pip install pipx 使用 现在您可以使用pipx来安装Python应用程序，例如：
1 pipx install some-package 这将使用pipx安装some-package，并在系统上创建一个隔离的虚拟环境，以确保该包的依赖项不会与您的系统中的其他软件包冲突。
1 2 3 4 5 6 7 8 9 10 11 chunk@chunk-ThinkPad-X1-Carbon-5th  /tmp $ pipx list venvs are in /home/chunk/.local/pipx/venvs apps are exposed on your $PATH at /home/chunk/.local/bin package pip-search 0.0.12, installed using Python 3.10.6 - pip_search package thefuck 3.32, installed using Python 3.]]></description>
</item>
<item>
  <title>Ubuntu包管理工具nala</title>
  <link>http://qq516249940.github.io/posts/ubuntu%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nala/</link>
  <pubDate>Wed, 01 Mar 2023 17:56:53 &#43;0800</pubDate>
  <author>chunk</author>
  <guid>http://qq516249940.github.io/posts/ubuntu%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nala/</guid>
  <description><![CDATA[]]></description>
</item>
<item>
  <title>Golang构建基于tag(Gopher Guides NO.1构建标签)</title>
  <link>http://qq516249940.github.io/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/</link>
  <pubDate>Wed, 01 Mar 2023 14:35:19 &#43;0800</pubDate>
  <author>chunk</author>
  <guid>http://qq516249940.github.io/posts/golang%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Etag/</guid>
  <description><![CDATA[123]]></description>
</item>
<item>
  <title>阿里云ack容器pod总额度修改</title>
  <link>http://qq516249940.github.io/posts/%E9%98%BF%E9%87%8C%E4%BA%91ack%E5%AE%B9%E5%99%A8pod%E6%80%BB%E9%A2%9D%E5%BA%A6%E4%BF%AE%E6%94%B9/</link>
  <pubDate>Wed, 22 Feb 2023 11:44:46 &#43;0800</pubDate>
  <author>Author</author>
  <guid>http://qq516249940.github.io/posts/%E9%98%BF%E9%87%8C%E4%BA%91ack%E5%AE%B9%E5%99%A8pod%E6%80%BB%E9%A2%9D%E5%BA%A6%E4%BF%AE%E6%94%B9/</guid>
  <description><![CDATA[需求 默认ack给我们每个work节点分配的容器组最大额度64,如图： 本想着尝试更改这个容器组数量
如何修改 通过root用户登陆ack工作节点，可以通过修改节点的/etc/systemd/system/kubelet.service.d/10-kubeadm.conf中的max pod来调整。 但请注意，创建集群的时候已经定义了每个节点支持的Pod数量（64个），这个时候也一并定义了节点的PodCIDR的子网掩码大小，这部分是无法调整的。
因此，虽然可以调整节点支持调度的pod数量，但每个节点可以给pod分配的IP是有限制的，无法修改。
意思就是说：注意可以分配的IP是固定修改不了的，但是可以修改每个节点所支持的容器组数量，所以一般不建议修改max pod数量。
1 2 3 4 5 6 7 8 9 10 11 12 # 阿里云ack 10-kubeadm.conf [Service] EnvironmentFile=-/etc/kubernetes/kubelet-customized-args.conf Environment=&#34;KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf&#34; Environment=&#34;KUBELET_SYSTEM_PODS_ARGS=--max-pods 64 --pod-manifest-path=/etc/kubernetes/manifests&#34; Environment=&#34;KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin --v=3&#34; Environment=&#34;KUBELET_DNS_ARGS=--enable-controller-attach-detach=true --cluster-dns=192.168.0.10 --pod-infra-container-image=registry-vpc.cn-shenzhen.aliyuncs.com/acs/pause:3.2 --enable-load-reader --cluster-domain=cluster.local --cloud-provider=external --hostname-override=cn-shenzhen.172.19.201.112 --provider-id=cn-shenzhen.i-wz91n56f8y4lx2jyf5yo&#34; Environment=&#34;KUBELET_AUTHZ_ARGS=--authorization-mode=Webhook --authentication-token-webhook=true --anonymous-auth=false --client-ca-file=/etc/kubernetes/pki/ca.crt&#34; Environment=&#34;KUBELET_CGROUP_ARGS=--cgroup-driver=systemd&#34; Environment=&#34;KUBELET_CERTIFICATE_ARGS=--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-cert-file=/var/lib/kubelet/pki/kubelet.crt --tls-private-key-file=/var/lib/kubelet/pki/kubelet.key --rotate-certificates=true --cert-dir=/var/lib/kubelet/pki&#34; ExecStart= ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_SYSTEM_PODS_ARGS $KUBELET_NETWORK_ARGS $KUBELET_DNS_ARGS $KUBELET_AUTHZ_ARGS $KUBELET_CGROUP_ARGS $KUBELET_CERTIFICATE_ARGS $KUBELET_EXTRA_ARGS $KUBELET_CUSTOMIZED_ARGS 1 2 3 4 5 6 7 8 9 10 11 12 13 # 原生K8S 10-kubeadm.]]></description>
</item>
</channel>
</rss>
